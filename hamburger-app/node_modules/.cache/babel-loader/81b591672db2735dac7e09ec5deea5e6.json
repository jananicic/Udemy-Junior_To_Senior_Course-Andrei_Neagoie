{"ast":null,"code":"import _toConsumableArray from \"/Users/jan/programiranje/hamburger-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jan/programiranje/hamburger-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jan/programiranje/hamburger-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jan/programiranje/hamburger-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jan/programiranje/hamburger-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jan/programiranje/hamburger-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jan/programiranje/hamburger-app/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport Div from '../components/Div';\nimport InputField from '../components/InputField';\nimport User from './components';\nimport './app.css';\n/*const changeColor = () => {\n  const div = document.getElementById('div1');\n  let color = div.style.backgroundColor;\n\n  if(color === 'red') {\n    div.style.backgroundColor = 'blue';\n    color = 'blue';\n  } else {\n    div.style.backgroundColor = 'red';\n    color = 'red';\n  }\n}*/\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.changeColor = function () {\n      document.getElementById('div1').style.backgroundColor === 'red' ? _this.setState({\n        color: 'blue'\n      }) : _this.setState({\n        color: 'red'\n      });\n    };\n\n    _this.addUser = function () {\n      var name = document.getElementById('name');\n      var username = document.getElementById('username');\n      var email = document.getElementById('email');\n\n      _this.setState({\n        users: _toConsumableArray(_this.state.users).concat([{\n          id: Math.random().toString(36).substr(2, 9),\n          name: name.value,\n          username: username.value,\n          email: email.value\n        }])\n      });\n    };\n\n    _this.state = {\n      color: 'red',\n      users: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.users);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Div, {\n        color: this.state.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"changeColorButton\",\n        onClick: this.changeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Click to change color!\"), React.createElement(InputField, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Add User!\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.users.map(function (user) {\n        return React.createElement(Users, {\n          user: user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jan/programiranje/hamburger-app/src/containers/App.js"],"names":["React","Component","Div","InputField","User","App","changeColor","document","getElementById","style","backgroundColor","setState","color","addUser","name","username","email","users","state","id","Math","random","toString","substr","value","console","log","map","user"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,WAAP;AAEA;;;;;;;;;;;;;IAaMC,G;;;;;AACJ,iBAAa;AAAA;;AAAA;;AACX;;AADW,UAQbC,WARa,GAQC,YAAM;AAClBC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,CAAsCC,eAAtC,KAA0D,KAA1D,GACI,MAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAd,CADJ,GAEI,MAAKD,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAd,CAFJ;AAGD,KAZY;;AAAA,UAcbC,OAda,GAcH,YAAM;AACd,UAAMC,IAAI,GAAGP,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;AACA,UAAMO,QAAQ,GAAGR,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAjB;AACA,UAAMQ,KAAK,GAAGT,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd;;AAEA,YAAKG,QAAL,CAAc;AACZM,QAAAA,KAAK,qBAAM,MAAKC,KAAL,CAAWD,KAAjB,UAAwB;AAC3BE,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CADuB;AAE3BT,UAAAA,IAAI,EAAEA,IAAI,CAACU,KAFgB;AAG3BT,UAAAA,QAAQ,EAAEA,QAAQ,CAACS,KAHQ;AAI3BR,UAAAA,KAAK,EAAEA,KAAK,CAACQ;AAJc,SAAxB;AADO,OAAd;AAQD,KA3BY;;AAEX,UAAKN,KAAL,GAAa;AACXN,MAAAA,KAAK,EAAE,KADI;AAEXK,MAAAA,KAAK,EAAE;AAFI,KAAb;AAFW;AAMZ;;;;6BAuBQ;AACPQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWD,KAAvB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWN,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,EAAE,EAAC,mBAAX;AAA+B,QAAA,OAAO,EAAE,KAAKN,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,EAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAQ,QAAA,OAAO,EAAE,KAAKO,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CADA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKK,KAAL,CAAWD,KAAX,CAAiBU,GAAjB,CAAsB,UAAAC,IAAI;AAAA,eAAI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAEA,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAA1B,CADH,CAPA,CADF;AAcD;;;;EA9Ce3B,S;;AAiDlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Div from '../components/Div';\nimport InputField from '../components/InputField';\nimport User from './components'\nimport './app.css';\n\n/*const changeColor = () => {\n  const div = document.getElementById('div1');\n  let color = div.style.backgroundColor;\n\n  if(color === 'red') {\n    div.style.backgroundColor = 'blue';\n    color = 'blue';\n  } else {\n    div.style.backgroundColor = 'red';\n    color = 'red';\n  }\n}*/\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      color: 'red',\n      users: []\n    }\n  }\n\n  changeColor = () => {\n    document.getElementById('div1').style.backgroundColor === 'red' \n      ? this.setState({color: 'blue'}) \n      : this.setState({color: 'red'});\n  }\n\n  addUser = () => {\n    const name = document.getElementById('name');\n    const username = document.getElementById('username');\n    const email = document.getElementById('email');\n\n    this.setState({\n      users: [...this.state.users, {\n        id: Math.random().toString(36).substr(2, 9),\n        name: name.value,\n        username: username.value,\n        email: email.value\n      }]\n    });\n  }\n\n  render() {\n    console.log(this.state.users);\n    return (\n      <div className=\"App\">\n      <div>\n        <Div color={this.state.color}/>\n        <button id=\"changeColorButton\" onClick={this.changeColor}>Click to change color!</button>\n        <InputField />\n        <button onClick={this.addUser}>Add User!</button>\n      </div>\n      <div>\n        {this.state.users.map( user => <Users user={user} /> )}\n      </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}