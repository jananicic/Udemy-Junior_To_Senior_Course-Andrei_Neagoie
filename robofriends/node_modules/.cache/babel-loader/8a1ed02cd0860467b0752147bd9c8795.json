{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jan/programiranje/junior-to-senior/robofriends/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jan/programiranje/junior-to-senior/robofriends/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jan/programiranje/junior-to-senior/robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jan/programiranje/junior-to-senior/robofriends/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jan/programiranje/junior-to-senior/robofriends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jan/programiranje/junior-to-senior/robofriends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jan/programiranje/junior-to-senior/robofriends/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jan/programiranje/junior-to-senior/robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport { setSearchField } from '../actions';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.ispending,\n    error: state.requestRobots.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSearchChange: function onSearchChange(event) {\n      return dispatch(setSearchField(event.target.value));\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      robots: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var fetchAsync =\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          var response, data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return fetch('https://jsonplaceholder.typicode.com/users');\n\n                case 2:\n                  response = _context.sent;\n                  _context.next = 5;\n                  return response.json();\n\n                case 5:\n                  data = _context.sent;\n\n                  _this2.setState({\n                    robots: data\n                  });\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function fetchAsync() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      fetchAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var robots = this.state.robots;\n      var _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange;\n      var filteredRobots = robots.filter(function (robot) {\n        return robot.name.toLowerCase().includes(searchField.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"RoboFriends\"), React.createElement(SearchBox, {\n        searchchange: onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        robots: filteredRobots,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jan/programiranje/junior-to-senior/robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","setSearchField","mapStateToProps","state","searchField","searchRobots","robots","requestRobots","isPending","ispending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","fetchAsync","fetch","response","json","data","setState","props","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WADF;AAE9BE,IAAAA,MAAM,EAAEH,KAAK,CAACI,aAAN,CAAoBD,MAFE;AAG9BE,IAAAA,SAAS,EAAEL,KAAK,CAACI,aAAN,CAAoBE,SAHD;AAI9BC,IAAAA,KAAK,EAAEP,KAAK,CAACI,aAAN,CAAoBG;AAJG,GAAL;AAAA,CAA7B;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCC,IAAAA,cAAc,EAAE,wBAAAC,KAAK;AAAA,aAAIF,QAAQ,CAACX,cAAc,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAAZ;AAAA;AADe,GAAL;AAAA,CAAnC;;IAIMC,G;;;;;AACF,iBAAc;AAAA;;AAAA;;AACV;AACA,UAAKd,KAAL,GAAa;AACTG,MAAAA,MAAM,EAAE;AADC,KAAb;AAFU;AAKb;;;;wCAEmB;AAAA;;AAChB,UAAMY,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACMC,KAAK,CAAC,4CAAD,CADX;;AAAA;AACXC,kBAAAA,QADW;AAAA;AAAA,yBAEEA,QAAQ,CAACC,IAAT,EAFF;;AAAA;AAEXC,kBAAAA,IAFW;;AAGf,kBAAA,MAAI,CAACC,QAAL,CAAc;AAACjB,oBAAAA,MAAM,EAAEgB;AAAT,mBAAd;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAAVJ,UAAU;AAAA;AAAA;AAAA,SAAhB;;AAKAA,MAAAA,UAAU;AACb;;;6BAEQ;AAAA,UACGZ,MADH,GACc,KAAKH,KADnB,CACGG,MADH;AAAA,wBAEmC,KAAKkB,KAFxC;AAAA,UAEGpB,WAFH,eAEGA,WAFH;AAAA,UAEgBS,cAFhB,eAEgBA,cAFhB;AAIL,UAAMY,cAAc,GAAGnB,MAAM,CAACoB,MAAP,CAAc,UAAAC,KAAK,EAAI;AAC1C,eAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC1B,WAAW,CAACyB,WAAZ,EAAlC,CAAP;AACH,OAFsB,CAAvB;AAIA,aACI;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAEhB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEY,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHJ,CADJ;AASH;;;;EAlCa7B,S;;AAqClB,eAAeC,OAAO,CAClBK,eADkB,EAElBS,kBAFkB,CAAP,CAGbM,GAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport { setSearchField } from '../actions';\n\nconst mapStateToProps = state => ({\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.ispending,\n    error: state.requestRobots.error,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n});\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: []\n        }\n    }\n\n    componentDidMount() {\n        const fetchAsync = async () => {\n            let response = await fetch('https://jsonplaceholder.typicode.com/users');\n            let data = await response.json();\n            this.setState({robots: data});\n        }\n        fetchAsync();\n    }\n\n    render() {\n        const { robots } = this.state;\n        const { searchField, onSearchChange } = this.props\n\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        })\n\n        return(\n            <div className='tc'>\n                <h1>RoboFriends</h1>\n                <SearchBox searchchange={onSearchChange}/>\n                <Scroll>\n                    <CardList robots={filteredRobots} />\n                </Scroll>\n            </div>    \n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);"]},"metadata":{},"sourceType":"module"}